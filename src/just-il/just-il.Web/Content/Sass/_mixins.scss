@import "_variables.scss";

// Content width
// Max width for content outside the container
$max-content-width: 1920px;

$break-wide: 1280px;
$break-medium: 768px;
$break-medium-min: 767px;
$break-small: 374px;
$break-small-plus: 568px;
$break-small-min: 320px;
$break-medium-plus: 991px;


@mixin maxwidth-small {
	@media screen and (max-width: #{$break-small-min}) {
		@content;
	}
}

@mixin maxwidth-small-plus {
	@media screen and (max-width: #{$break-small-plus}) {
		@content;
	}
}

@mixin maxwidth-medium {
	@media screen and (max-width: #{$break-medium-min}) {
		@content;
	}
}

@mixin maxwidth-medium-plus {
	@media screen and (max-width: #{$break-medium-plus}) {
		@content;
	}
}

@mixin maxwidth-wide {
	@media screen and (max-width: #{$break-wide}) {
		@content;
	}
}

@mixin minwidth-medium-plus {
	@media screen and (min-width: #{$break-medium-plus + 1px}) {
		@content;
	}
}

@mixin minwidth($setWidth){
	@media screen and (min-widht: #{$setWidth}){
		@content;
	}
}

// A set of mixins to insert flex-box properties with
// vendor-spesific variants consistently.
@mixin display-flex {
	display: -webkit-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
}

@mixin flex($grow, $shrink, $base) {
	-ms-flex: $grow $shrink $base;
	-webkit-flex: $grow $shrink $base;
	flex: $grow $shrink $base;
}

@mixin flex-direction($direction) {
	-webkit-flex-direction: $direction;
	flex-direction: $direction;
}

@mixin flex-wrap($wrap) {
	-webkit-flex-wrap: $wrap;
	flex-wrap: $wrap;
}

@mixin flex-flow($direction, $wrap) {
	-ms-flex-flow: $direction $wrap;
	-webkit-flex-flow: $direction $wrap;
	flex-flow: $direction $wrap;
}


// Utilize serverside browserdetection css classes on body tag
// usage in sass:
// .some-existing-rule{
//		the-property: some-value;
//		@include browserdetect(ie, 10){ the-property: some-other-value;}
// }
// result in compiled css:
//		.some-exisiting-rule{ the-property:some-value;}
//		.ie.ie-10 .some-exisiting-rule{the-property: some-other-value;}
//
@mixin browserdetected-version($browsercode, $version) {
	.#{$browsercode}.#{$browsercode}-#{$version} & {
		@content;
	}
}

@mixin browserdetected($browsercode){
	.#{$browsercode} &{
		@content;
	}
}

@mixin debugBorder($color: "rgba(0,0,0,0.5)") {
	border: 1px dashed #{$color};
}

@mixin transition($selector: "all") {
	transition: #{$selector} 0.3s cubic-bezier(0.2,0.1,0.2,1);
}

@mixin overlayBackground($opacity: 0.8) {
	background: rgba(0,0,0,$opacity);
}
