//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1088 with alias "siteSettings"
	/// <summary>_SiteSettings</summary>
	public partial interface ISiteSettings : IPublishedContent
	{
		/// <summary>#prop.SiteSettings.DeactivateLogoLink</summary>
		bool DeactivateLogoLink { get; }

		/// <summary>#prop.SiteSettings.HideHomePageInNavigation</summary>
		bool HideHomePageInNavigation { get; }

		/// <summary>#prop.SiteSettings.MainNavigation</summary>
		IEnumerable<IPublishedContent> MainNavigation { get; }

		/// <summary>#prop.SiteSettings.ServiceNavigation</summary>
		IEnumerable<RJP.MultiUrlPicker.Models.Link> ServiceNavigation { get; }

		/// <summary>#prop.SiteSettings.Logo</summary>
		IPublishedContent SiteLogo { get; }

		/// <summary>#prop.SiteSettings.Logo.Neg</summary>
		IPublishedContent SiteLogoNegative { get; }

		/// <summary>#prop.SiteSettings.SiteName</summary>
		string SiteName { get; }
	}

	/// <summary>_SiteSettings</summary>
	[PublishedContentModel("siteSettings")]
	public partial class SiteSettings : PublishedContentModel, ISiteSettings
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "siteSettings";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SiteSettings(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SiteSettings, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// #prop.SiteSettings.DeactivateLogoLink: #prop.SiteSettings.DeactivateLogoLink.d
		///</summary>
		[ImplementPropertyType("deactivateLogoLink")]
		public bool DeactivateLogoLink
		{
			get { return GetDeactivateLogoLink(this); }
		}

		/// <summary>Static getter for #prop.SiteSettings.DeactivateLogoLink</summary>
		public static bool GetDeactivateLogoLink(ISiteSettings that) { return that.GetPropertyValue<bool>("deactivateLogoLink"); }

		///<summary>
		/// #prop.SiteSettings.HideHomePageInNavigation: #prop.SiteSettings.HideHomePageInNavigation.d
		///</summary>
		[ImplementPropertyType("hideHomePageInNavigation")]
		public bool HideHomePageInNavigation
		{
			get { return GetHideHomePageInNavigation(this); }
		}

		/// <summary>Static getter for #prop.SiteSettings.HideHomePageInNavigation</summary>
		public static bool GetHideHomePageInNavigation(ISiteSettings that) { return that.GetPropertyValue<bool>("hideHomePageInNavigation"); }

		///<summary>
		/// #prop.SiteSettings.MainNavigation: #prop.SiteSettings.MainNavigation.d
		///</summary>
		[ImplementPropertyType("mainNavigation")]
		public IEnumerable<IPublishedContent> MainNavigation
		{
			get { return GetMainNavigation(this); }
		}

		/// <summary>Static getter for #prop.SiteSettings.MainNavigation</summary>
		public static IEnumerable<IPublishedContent> GetMainNavigation(ISiteSettings that) { return that.GetPropertyValue<IEnumerable<IPublishedContent>>("mainNavigation"); }

		///<summary>
		/// #prop.SiteSettings.ServiceNavigation: #prop.SiteSettings.ServiceNavigation.d
		///</summary>
		[ImplementPropertyType("serviceNavigation")]
		public IEnumerable<RJP.MultiUrlPicker.Models.Link> ServiceNavigation
		{
			get { return GetServiceNavigation(this); }
		}

		/// <summary>Static getter for #prop.SiteSettings.ServiceNavigation</summary>
		public static IEnumerable<RJP.MultiUrlPicker.Models.Link> GetServiceNavigation(ISiteSettings that) { return that.GetPropertyValue<IEnumerable<RJP.MultiUrlPicker.Models.Link>>("serviceNavigation"); }

		///<summary>
		/// #prop.SiteSettings.Logo: #prop.SiteSettings.Logo.d
		///</summary>
		[ImplementPropertyType("siteLogo")]
		public IPublishedContent SiteLogo
		{
			get { return GetSiteLogo(this); }
		}

		/// <summary>Static getter for #prop.SiteSettings.Logo</summary>
		public static IPublishedContent GetSiteLogo(ISiteSettings that) { return that.GetPropertyValue<IPublishedContent>("siteLogo"); }

		///<summary>
		/// #prop.SiteSettings.Logo.Neg: #prop.SiteSettings.Logo.Neg.d
		///</summary>
		[ImplementPropertyType("siteLogoNegative")]
		public IPublishedContent SiteLogoNegative
		{
			get { return GetSiteLogoNegative(this); }
		}

		/// <summary>Static getter for #prop.SiteSettings.Logo.Neg</summary>
		public static IPublishedContent GetSiteLogoNegative(ISiteSettings that) { return that.GetPropertyValue<IPublishedContent>("siteLogoNegative"); }

		///<summary>
		/// #prop.SiteSettings.SiteName: #prop.SiteSettings.SiteName.d
		///</summary>
		[ImplementPropertyType("siteName")]
		public string SiteName
		{
			get { return GetSiteName(this); }
		}

		/// <summary>Static getter for #prop.SiteSettings.SiteName</summary>
		public static string GetSiteName(ISiteSettings that) { return that.GetPropertyValue<string>("siteName"); }
	}
}
